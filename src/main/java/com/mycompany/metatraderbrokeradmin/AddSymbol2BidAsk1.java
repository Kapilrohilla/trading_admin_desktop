/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.metatraderbrokeradmin;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import okhttp3.Call;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Kapil
 */
public class AddSymbol2BidAsk1 extends javax.swing.JFrame {

    int xx=0;
    private ArrayList<String> arraylist = new ArrayList<>();
    String selectedSymbol = null;

    public AddSymbol2BidAsk1(int ix) throws JSONException {
        initComponents();
        xx=ix;
        String groupSymbol = getData();

        JSONObject jso = new JSONObject(groupSymbol);
        JSONArray jsa = jso.getJSONArray("message");

        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (int i = 0; i < jsa.length(); i++) {
            JSONObject symbolObj = jsa.getJSONObject(i);
            String symbol = symbolObj.getString("Symbol");
            arraylist.add(symbol);
            System.out.println("symbol: " + symbol);
            listModel.addElement(symbol);
        }
        jList1.setModel(listModel);
          jList1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                JList list = (JList) evt.getSource();
                int index = list.locationToIndex(evt.getPoint());
               
                if (evt.getClickCount() == 2) {
                    String symbolClicked = arraylist.get(index);
                    if(xx==0){
                    ChartPanel.symbol=symbolClicked;
                    ChartPanel.jLabel1.setText("Selected Symbol : "+symbolClicked);
                    }
                    else if(xx==1){
                        BidAskLastPanel.symbol=symbolClicked;
                        BidAskLastPanel.jLabel1.setText("Selected Symbol : "+symbolClicked);
                    }
                    dispose();
                }
            }
        });
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(400, 600);
        setLocationRelativeTo(null);
    }
    
   

  
    final String getData() {
        OkHttpClient client = new OkHttpClient();
//        String token = Metacustomer.loginToken;

        // groups/symbol
        long lo=System.currentTimeMillis();
        String apiUrl = "http://65.0.59.137:8080/get-all-symbols?timestamp=" + lo;
        Request symbolRequest = new Request.Builder()
                .url(apiUrl)
//                .header("Authorization", token)
                .build();

        Call call2 = client.newCall(symbolRequest);
        try {
            Response symbolResponse = call2.execute();
            String groupSymbol = symbolResponse.body().string();
            String symbolsInGroup = groupSymbol;
            return symbolsInGroup;
        } catch (IOException e) {
            System.out.println("Runtime error");
            return "";
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSymbol2BidAsk1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSymbol2BidAsk1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSymbol2BidAsk1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSymbol2BidAsk1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
